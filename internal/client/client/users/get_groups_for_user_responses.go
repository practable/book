// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/practable/book/internal/client/models"
)

// GetGroupsForUserReader is a Reader for the GetGroupsForUser structure.
type GetGroupsForUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGroupsForUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGroupsForUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetGroupsForUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGroupsForUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGroupsForUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGroupsForUserOK creates a GetGroupsForUserOK with default headers values
func NewGetGroupsForUserOK() *GetGroupsForUserOK {
	return &GetGroupsForUserOK{}
}

/* GetGroupsForUserOK describes a response with status code 200, with default header values.

OK
*/
type GetGroupsForUserOK struct {
	Payload *models.GroupsDescribed
}

// IsSuccess returns true when this get groups for user o k response has a 2xx status code
func (o *GetGroupsForUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get groups for user o k response has a 3xx status code
func (o *GetGroupsForUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get groups for user o k response has a 4xx status code
func (o *GetGroupsForUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get groups for user o k response has a 5xx status code
func (o *GetGroupsForUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get groups for user o k response a status code equal to that given
func (o *GetGroupsForUserOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetGroupsForUserOK) Error() string {
	return fmt.Sprintf("[GET /users/{user_name}/groups][%d] getGroupsForUserOK  %+v", 200, o.Payload)
}

func (o *GetGroupsForUserOK) String() string {
	return fmt.Sprintf("[GET /users/{user_name}/groups][%d] getGroupsForUserOK  %+v", 200, o.Payload)
}

func (o *GetGroupsForUserOK) GetPayload() *models.GroupsDescribed {
	return o.Payload
}

func (o *GetGroupsForUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GroupsDescribed)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupsForUserUnauthorized creates a GetGroupsForUserUnauthorized with default headers values
func NewGetGroupsForUserUnauthorized() *GetGroupsForUserUnauthorized {
	return &GetGroupsForUserUnauthorized{}
}

/* GetGroupsForUserUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetGroupsForUserUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get groups for user unauthorized response has a 2xx status code
func (o *GetGroupsForUserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get groups for user unauthorized response has a 3xx status code
func (o *GetGroupsForUserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get groups for user unauthorized response has a 4xx status code
func (o *GetGroupsForUserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get groups for user unauthorized response has a 5xx status code
func (o *GetGroupsForUserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get groups for user unauthorized response a status code equal to that given
func (o *GetGroupsForUserUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetGroupsForUserUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users/{user_name}/groups][%d] getGroupsForUserUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGroupsForUserUnauthorized) String() string {
	return fmt.Sprintf("[GET /users/{user_name}/groups][%d] getGroupsForUserUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGroupsForUserUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGroupsForUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupsForUserNotFound creates a GetGroupsForUserNotFound with default headers values
func NewGetGroupsForUserNotFound() *GetGroupsForUserNotFound {
	return &GetGroupsForUserNotFound{}
}

/* GetGroupsForUserNotFound describes a response with status code 404, with default header values.

The specified resource was not found
*/
type GetGroupsForUserNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get groups for user not found response has a 2xx status code
func (o *GetGroupsForUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get groups for user not found response has a 3xx status code
func (o *GetGroupsForUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get groups for user not found response has a 4xx status code
func (o *GetGroupsForUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get groups for user not found response has a 5xx status code
func (o *GetGroupsForUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get groups for user not found response a status code equal to that given
func (o *GetGroupsForUserNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetGroupsForUserNotFound) Error() string {
	return fmt.Sprintf("[GET /users/{user_name}/groups][%d] getGroupsForUserNotFound  %+v", 404, o.Payload)
}

func (o *GetGroupsForUserNotFound) String() string {
	return fmt.Sprintf("[GET /users/{user_name}/groups][%d] getGroupsForUserNotFound  %+v", 404, o.Payload)
}

func (o *GetGroupsForUserNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGroupsForUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupsForUserInternalServerError creates a GetGroupsForUserInternalServerError with default headers values
func NewGetGroupsForUserInternalServerError() *GetGroupsForUserInternalServerError {
	return &GetGroupsForUserInternalServerError{}
}

/* GetGroupsForUserInternalServerError describes a response with status code 500, with default header values.

Internal Error
*/
type GetGroupsForUserInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get groups for user internal server error response has a 2xx status code
func (o *GetGroupsForUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get groups for user internal server error response has a 3xx status code
func (o *GetGroupsForUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get groups for user internal server error response has a 4xx status code
func (o *GetGroupsForUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get groups for user internal server error response has a 5xx status code
func (o *GetGroupsForUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get groups for user internal server error response a status code equal to that given
func (o *GetGroupsForUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetGroupsForUserInternalServerError) Error() string {
	return fmt.Sprintf("[GET /users/{user_name}/groups][%d] getGroupsForUserInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGroupsForUserInternalServerError) String() string {
	return fmt.Sprintf("[GET /users/{user_name}/groups][%d] getGroupsForUserInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGroupsForUserInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGroupsForUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
