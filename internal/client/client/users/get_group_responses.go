// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/practable/book/internal/client/models"
)

// GetGroupReader is a Reader for the GetGroup structure.
type GetGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetGroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGroupOK creates a GetGroupOK with default headers values
func NewGetGroupOK() *GetGroupOK {
	return &GetGroupOK{}
}

/* GetGroupOK describes a response with status code 200, with default header values.

OK
*/
type GetGroupOK struct {
	Payload *models.GroupDescribedWithPolicies
}

// IsSuccess returns true when this get group o k response has a 2xx status code
func (o *GetGroupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get group o k response has a 3xx status code
func (o *GetGroupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group o k response has a 4xx status code
func (o *GetGroupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get group o k response has a 5xx status code
func (o *GetGroupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get group o k response a status code equal to that given
func (o *GetGroupOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetGroupOK) Error() string {
	return fmt.Sprintf("[GET /groups/{group_name}][%d] getGroupOK  %+v", 200, o.Payload)
}

func (o *GetGroupOK) String() string {
	return fmt.Sprintf("[GET /groups/{group_name}][%d] getGroupOK  %+v", 200, o.Payload)
}

func (o *GetGroupOK) GetPayload() *models.GroupDescribedWithPolicies {
	return o.Payload
}

func (o *GetGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GroupDescribedWithPolicies)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupUnauthorized creates a GetGroupUnauthorized with default headers values
func NewGetGroupUnauthorized() *GetGroupUnauthorized {
	return &GetGroupUnauthorized{}
}

/* GetGroupUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetGroupUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get group unauthorized response has a 2xx status code
func (o *GetGroupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group unauthorized response has a 3xx status code
func (o *GetGroupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group unauthorized response has a 4xx status code
func (o *GetGroupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group unauthorized response has a 5xx status code
func (o *GetGroupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get group unauthorized response a status code equal to that given
func (o *GetGroupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetGroupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /groups/{group_name}][%d] getGroupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGroupUnauthorized) String() string {
	return fmt.Sprintf("[GET /groups/{group_name}][%d] getGroupUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGroupUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupNotFound creates a GetGroupNotFound with default headers values
func NewGetGroupNotFound() *GetGroupNotFound {
	return &GetGroupNotFound{}
}

/* GetGroupNotFound describes a response with status code 404, with default header values.

The specified resource was not found
*/
type GetGroupNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get group not found response has a 2xx status code
func (o *GetGroupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group not found response has a 3xx status code
func (o *GetGroupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group not found response has a 4xx status code
func (o *GetGroupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group not found response has a 5xx status code
func (o *GetGroupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get group not found response a status code equal to that given
func (o *GetGroupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetGroupNotFound) Error() string {
	return fmt.Sprintf("[GET /groups/{group_name}][%d] getGroupNotFound  %+v", 404, o.Payload)
}

func (o *GetGroupNotFound) String() string {
	return fmt.Sprintf("[GET /groups/{group_name}][%d] getGroupNotFound  %+v", 404, o.Payload)
}

func (o *GetGroupNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupInternalServerError creates a GetGroupInternalServerError with default headers values
func NewGetGroupInternalServerError() *GetGroupInternalServerError {
	return &GetGroupInternalServerError{}
}

/* GetGroupInternalServerError describes a response with status code 500, with default header values.

Internal Error
*/
type GetGroupInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get group internal server error response has a 2xx status code
func (o *GetGroupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group internal server error response has a 3xx status code
func (o *GetGroupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group internal server error response has a 4xx status code
func (o *GetGroupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get group internal server error response has a 5xx status code
func (o *GetGroupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get group internal server error response a status code equal to that given
func (o *GetGroupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetGroupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /groups/{group_name}][%d] getGroupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGroupInternalServerError) String() string {
	return fmt.Sprintf("[GET /groups/{group_name}][%d] getGroupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGroupInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
