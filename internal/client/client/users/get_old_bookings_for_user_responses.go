// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/timdrysdale/interval/internal/client/models"
)

// GetOldBookingsForUserReader is a Reader for the GetOldBookingsForUser structure.
type GetOldBookingsForUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOldBookingsForUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOldBookingsForUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetOldBookingsForUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOldBookingsForUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOldBookingsForUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOldBookingsForUserOK creates a GetOldBookingsForUserOK with default headers values
func NewGetOldBookingsForUserOK() *GetOldBookingsForUserOK {
	return &GetOldBookingsForUserOK{}
}

/* GetOldBookingsForUserOK describes a response with status code 200, with default header values.

OK
*/
type GetOldBookingsForUserOK struct {
	Payload models.Bookings
}

// IsSuccess returns true when this get old bookings for user o k response has a 2xx status code
func (o *GetOldBookingsForUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get old bookings for user o k response has a 3xx status code
func (o *GetOldBookingsForUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get old bookings for user o k response has a 4xx status code
func (o *GetOldBookingsForUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get old bookings for user o k response has a 5xx status code
func (o *GetOldBookingsForUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get old bookings for user o k response a status code equal to that given
func (o *GetOldBookingsForUserOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetOldBookingsForUserOK) Error() string {
	return fmt.Sprintf("[GET /users/{user_name}/oldbookings][%d] getOldBookingsForUserOK  %+v", 200, o.Payload)
}

func (o *GetOldBookingsForUserOK) String() string {
	return fmt.Sprintf("[GET /users/{user_name}/oldbookings][%d] getOldBookingsForUserOK  %+v", 200, o.Payload)
}

func (o *GetOldBookingsForUserOK) GetPayload() models.Bookings {
	return o.Payload
}

func (o *GetOldBookingsForUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOldBookingsForUserUnauthorized creates a GetOldBookingsForUserUnauthorized with default headers values
func NewGetOldBookingsForUserUnauthorized() *GetOldBookingsForUserUnauthorized {
	return &GetOldBookingsForUserUnauthorized{}
}

/* GetOldBookingsForUserUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetOldBookingsForUserUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get old bookings for user unauthorized response has a 2xx status code
func (o *GetOldBookingsForUserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get old bookings for user unauthorized response has a 3xx status code
func (o *GetOldBookingsForUserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get old bookings for user unauthorized response has a 4xx status code
func (o *GetOldBookingsForUserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get old bookings for user unauthorized response has a 5xx status code
func (o *GetOldBookingsForUserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get old bookings for user unauthorized response a status code equal to that given
func (o *GetOldBookingsForUserUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetOldBookingsForUserUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users/{user_name}/oldbookings][%d] getOldBookingsForUserUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOldBookingsForUserUnauthorized) String() string {
	return fmt.Sprintf("[GET /users/{user_name}/oldbookings][%d] getOldBookingsForUserUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOldBookingsForUserUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOldBookingsForUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOldBookingsForUserNotFound creates a GetOldBookingsForUserNotFound with default headers values
func NewGetOldBookingsForUserNotFound() *GetOldBookingsForUserNotFound {
	return &GetOldBookingsForUserNotFound{}
}

/* GetOldBookingsForUserNotFound describes a response with status code 404, with default header values.

The specified resource was not found
*/
type GetOldBookingsForUserNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get old bookings for user not found response has a 2xx status code
func (o *GetOldBookingsForUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get old bookings for user not found response has a 3xx status code
func (o *GetOldBookingsForUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get old bookings for user not found response has a 4xx status code
func (o *GetOldBookingsForUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get old bookings for user not found response has a 5xx status code
func (o *GetOldBookingsForUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get old bookings for user not found response a status code equal to that given
func (o *GetOldBookingsForUserNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetOldBookingsForUserNotFound) Error() string {
	return fmt.Sprintf("[GET /users/{user_name}/oldbookings][%d] getOldBookingsForUserNotFound  %+v", 404, o.Payload)
}

func (o *GetOldBookingsForUserNotFound) String() string {
	return fmt.Sprintf("[GET /users/{user_name}/oldbookings][%d] getOldBookingsForUserNotFound  %+v", 404, o.Payload)
}

func (o *GetOldBookingsForUserNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOldBookingsForUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOldBookingsForUserInternalServerError creates a GetOldBookingsForUserInternalServerError with default headers values
func NewGetOldBookingsForUserInternalServerError() *GetOldBookingsForUserInternalServerError {
	return &GetOldBookingsForUserInternalServerError{}
}

/* GetOldBookingsForUserInternalServerError describes a response with status code 500, with default header values.

Internal Error
*/
type GetOldBookingsForUserInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get old bookings for user internal server error response has a 2xx status code
func (o *GetOldBookingsForUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get old bookings for user internal server error response has a 3xx status code
func (o *GetOldBookingsForUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get old bookings for user internal server error response has a 4xx status code
func (o *GetOldBookingsForUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get old bookings for user internal server error response has a 5xx status code
func (o *GetOldBookingsForUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get old bookings for user internal server error response a status code equal to that given
func (o *GetOldBookingsForUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetOldBookingsForUserInternalServerError) Error() string {
	return fmt.Sprintf("[GET /users/{user_name}/oldbookings][%d] getOldBookingsForUserInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOldBookingsForUserInternalServerError) String() string {
	return fmt.Sprintf("[GET /users/{user_name}/oldbookings][%d] getOldBookingsForUserInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOldBookingsForUserInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOldBookingsForUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
