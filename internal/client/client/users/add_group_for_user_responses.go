// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/practable/book/internal/client/models"
)

// AddGroupForUserReader is a Reader for the AddGroupForUser structure.
type AddGroupForUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddGroupForUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewAddGroupForUserNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAddGroupForUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddGroupForUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddGroupForUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddGroupForUserNoContent creates a AddGroupForUserNoContent with default headers values
func NewAddGroupForUserNoContent() *AddGroupForUserNoContent {
	return &AddGroupForUserNoContent{}
}

/* AddGroupForUserNoContent describes a response with status code 204, with default header values.

OK - No Content
*/
type AddGroupForUserNoContent struct {
}

// IsSuccess returns true when this add group for user no content response has a 2xx status code
func (o *AddGroupForUserNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add group for user no content response has a 3xx status code
func (o *AddGroupForUserNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add group for user no content response has a 4xx status code
func (o *AddGroupForUserNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this add group for user no content response has a 5xx status code
func (o *AddGroupForUserNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this add group for user no content response a status code equal to that given
func (o *AddGroupForUserNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *AddGroupForUserNoContent) Error() string {
	return fmt.Sprintf("[POST /users/{user_name}/groups/{group_name}][%d] addGroupForUserNoContent ", 204)
}

func (o *AddGroupForUserNoContent) String() string {
	return fmt.Sprintf("[POST /users/{user_name}/groups/{group_name}][%d] addGroupForUserNoContent ", 204)
}

func (o *AddGroupForUserNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddGroupForUserUnauthorized creates a AddGroupForUserUnauthorized with default headers values
func NewAddGroupForUserUnauthorized() *AddGroupForUserUnauthorized {
	return &AddGroupForUserUnauthorized{}
}

/* AddGroupForUserUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddGroupForUserUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this add group for user unauthorized response has a 2xx status code
func (o *AddGroupForUserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add group for user unauthorized response has a 3xx status code
func (o *AddGroupForUserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add group for user unauthorized response has a 4xx status code
func (o *AddGroupForUserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add group for user unauthorized response has a 5xx status code
func (o *AddGroupForUserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add group for user unauthorized response a status code equal to that given
func (o *AddGroupForUserUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *AddGroupForUserUnauthorized) Error() string {
	return fmt.Sprintf("[POST /users/{user_name}/groups/{group_name}][%d] addGroupForUserUnauthorized  %+v", 401, o.Payload)
}

func (o *AddGroupForUserUnauthorized) String() string {
	return fmt.Sprintf("[POST /users/{user_name}/groups/{group_name}][%d] addGroupForUserUnauthorized  %+v", 401, o.Payload)
}

func (o *AddGroupForUserUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddGroupForUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddGroupForUserNotFound creates a AddGroupForUserNotFound with default headers values
func NewAddGroupForUserNotFound() *AddGroupForUserNotFound {
	return &AddGroupForUserNotFound{}
}

/* AddGroupForUserNotFound describes a response with status code 404, with default header values.

The specified resource was not found
*/
type AddGroupForUserNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this add group for user not found response has a 2xx status code
func (o *AddGroupForUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add group for user not found response has a 3xx status code
func (o *AddGroupForUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add group for user not found response has a 4xx status code
func (o *AddGroupForUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add group for user not found response has a 5xx status code
func (o *AddGroupForUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add group for user not found response a status code equal to that given
func (o *AddGroupForUserNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *AddGroupForUserNotFound) Error() string {
	return fmt.Sprintf("[POST /users/{user_name}/groups/{group_name}][%d] addGroupForUserNotFound  %+v", 404, o.Payload)
}

func (o *AddGroupForUserNotFound) String() string {
	return fmt.Sprintf("[POST /users/{user_name}/groups/{group_name}][%d] addGroupForUserNotFound  %+v", 404, o.Payload)
}

func (o *AddGroupForUserNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddGroupForUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddGroupForUserInternalServerError creates a AddGroupForUserInternalServerError with default headers values
func NewAddGroupForUserInternalServerError() *AddGroupForUserInternalServerError {
	return &AddGroupForUserInternalServerError{}
}

/* AddGroupForUserInternalServerError describes a response with status code 500, with default header values.

Internal Error
*/
type AddGroupForUserInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this add group for user internal server error response has a 2xx status code
func (o *AddGroupForUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add group for user internal server error response has a 3xx status code
func (o *AddGroupForUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add group for user internal server error response has a 4xx status code
func (o *AddGroupForUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add group for user internal server error response has a 5xx status code
func (o *AddGroupForUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add group for user internal server error response a status code equal to that given
func (o *AddGroupForUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AddGroupForUserInternalServerError) Error() string {
	return fmt.Sprintf("[POST /users/{user_name}/groups/{group_name}][%d] addGroupForUserInternalServerError  %+v", 500, o.Payload)
}

func (o *AddGroupForUserInternalServerError) String() string {
	return fmt.Sprintf("[POST /users/{user_name}/groups/{group_name}][%d] addGroupForUserInternalServerError  %+v", 500, o.Payload)
}

func (o *AddGroupForUserInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddGroupForUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
