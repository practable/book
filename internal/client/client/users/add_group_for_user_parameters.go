// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewAddGroupForUserParams creates a new AddGroupForUserParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAddGroupForUserParams() *AddGroupForUserParams {
	return &AddGroupForUserParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAddGroupForUserParamsWithTimeout creates a new AddGroupForUserParams object
// with the ability to set a timeout on a request.
func NewAddGroupForUserParamsWithTimeout(timeout time.Duration) *AddGroupForUserParams {
	return &AddGroupForUserParams{
		timeout: timeout,
	}
}

// NewAddGroupForUserParamsWithContext creates a new AddGroupForUserParams object
// with the ability to set a context for a request.
func NewAddGroupForUserParamsWithContext(ctx context.Context) *AddGroupForUserParams {
	return &AddGroupForUserParams{
		Context: ctx,
	}
}

// NewAddGroupForUserParamsWithHTTPClient creates a new AddGroupForUserParams object
// with the ability to set a custom HTTPClient for a request.
func NewAddGroupForUserParamsWithHTTPClient(client *http.Client) *AddGroupForUserParams {
	return &AddGroupForUserParams{
		HTTPClient: client,
	}
}

/* AddGroupForUserParams contains all the parameters to send to the API endpoint
   for the add group for user operation.

   Typically these are written to a http.Request.
*/
type AddGroupForUserParams struct {

	// GroupName.
	GroupName string

	// UserName.
	UserName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the add group for user params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddGroupForUserParams) WithDefaults() *AddGroupForUserParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the add group for user params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddGroupForUserParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the add group for user params
func (o *AddGroupForUserParams) WithTimeout(timeout time.Duration) *AddGroupForUserParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add group for user params
func (o *AddGroupForUserParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add group for user params
func (o *AddGroupForUserParams) WithContext(ctx context.Context) *AddGroupForUserParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add group for user params
func (o *AddGroupForUserParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add group for user params
func (o *AddGroupForUserParams) WithHTTPClient(client *http.Client) *AddGroupForUserParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add group for user params
func (o *AddGroupForUserParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGroupName adds the groupName to the add group for user params
func (o *AddGroupForUserParams) WithGroupName(groupName string) *AddGroupForUserParams {
	o.SetGroupName(groupName)
	return o
}

// SetGroupName adds the groupName to the add group for user params
func (o *AddGroupForUserParams) SetGroupName(groupName string) {
	o.GroupName = groupName
}

// WithUserName adds the userName to the add group for user params
func (o *AddGroupForUserParams) WithUserName(userName string) *AddGroupForUserParams {
	o.SetUserName(userName)
	return o
}

// SetUserName adds the userName to the add group for user params
func (o *AddGroupForUserParams) SetUserName(userName string) {
	o.UserName = userName
}

// WriteToRequest writes these params to a swagger request
func (o *AddGroupForUserParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param group_name
	if err := r.SetPathParam("group_name", o.GroupName); err != nil {
		return err
	}

	// path param user_name
	if err := r.SetPathParam("user_name", o.UserName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
