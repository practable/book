// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/timdrysdale/interval/internal/client/models"
)

// GetPoliciesForUserReader is a Reader for the GetPoliciesForUser structure.
type GetPoliciesForUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPoliciesForUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPoliciesForUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetPoliciesForUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPoliciesForUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPoliciesForUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPoliciesForUserOK creates a GetPoliciesForUserOK with default headers values
func NewGetPoliciesForUserOK() *GetPoliciesForUserOK {
	return &GetPoliciesForUserOK{}
}

/* GetPoliciesForUserOK describes a response with status code 200, with default header values.

OK
*/
type GetPoliciesForUserOK struct {
	Payload models.PoliciesDescribed
}

// IsSuccess returns true when this get policies for user o k response has a 2xx status code
func (o *GetPoliciesForUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get policies for user o k response has a 3xx status code
func (o *GetPoliciesForUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policies for user o k response has a 4xx status code
func (o *GetPoliciesForUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get policies for user o k response has a 5xx status code
func (o *GetPoliciesForUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get policies for user o k response a status code equal to that given
func (o *GetPoliciesForUserOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetPoliciesForUserOK) Error() string {
	return fmt.Sprintf("[GET /users/{user_name}/policies][%d] getPoliciesForUserOK  %+v", 200, o.Payload)
}

func (o *GetPoliciesForUserOK) String() string {
	return fmt.Sprintf("[GET /users/{user_name}/policies][%d] getPoliciesForUserOK  %+v", 200, o.Payload)
}

func (o *GetPoliciesForUserOK) GetPayload() models.PoliciesDescribed {
	return o.Payload
}

func (o *GetPoliciesForUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPoliciesForUserUnauthorized creates a GetPoliciesForUserUnauthorized with default headers values
func NewGetPoliciesForUserUnauthorized() *GetPoliciesForUserUnauthorized {
	return &GetPoliciesForUserUnauthorized{}
}

/* GetPoliciesForUserUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetPoliciesForUserUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get policies for user unauthorized response has a 2xx status code
func (o *GetPoliciesForUserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get policies for user unauthorized response has a 3xx status code
func (o *GetPoliciesForUserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policies for user unauthorized response has a 4xx status code
func (o *GetPoliciesForUserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get policies for user unauthorized response has a 5xx status code
func (o *GetPoliciesForUserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get policies for user unauthorized response a status code equal to that given
func (o *GetPoliciesForUserUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetPoliciesForUserUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users/{user_name}/policies][%d] getPoliciesForUserUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPoliciesForUserUnauthorized) String() string {
	return fmt.Sprintf("[GET /users/{user_name}/policies][%d] getPoliciesForUserUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPoliciesForUserUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPoliciesForUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPoliciesForUserNotFound creates a GetPoliciesForUserNotFound with default headers values
func NewGetPoliciesForUserNotFound() *GetPoliciesForUserNotFound {
	return &GetPoliciesForUserNotFound{}
}

/* GetPoliciesForUserNotFound describes a response with status code 404, with default header values.

The specified resource was not found
*/
type GetPoliciesForUserNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get policies for user not found response has a 2xx status code
func (o *GetPoliciesForUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get policies for user not found response has a 3xx status code
func (o *GetPoliciesForUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policies for user not found response has a 4xx status code
func (o *GetPoliciesForUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get policies for user not found response has a 5xx status code
func (o *GetPoliciesForUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get policies for user not found response a status code equal to that given
func (o *GetPoliciesForUserNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetPoliciesForUserNotFound) Error() string {
	return fmt.Sprintf("[GET /users/{user_name}/policies][%d] getPoliciesForUserNotFound  %+v", 404, o.Payload)
}

func (o *GetPoliciesForUserNotFound) String() string {
	return fmt.Sprintf("[GET /users/{user_name}/policies][%d] getPoliciesForUserNotFound  %+v", 404, o.Payload)
}

func (o *GetPoliciesForUserNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPoliciesForUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPoliciesForUserInternalServerError creates a GetPoliciesForUserInternalServerError with default headers values
func NewGetPoliciesForUserInternalServerError() *GetPoliciesForUserInternalServerError {
	return &GetPoliciesForUserInternalServerError{}
}

/* GetPoliciesForUserInternalServerError describes a response with status code 500, with default header values.

Internal Error
*/
type GetPoliciesForUserInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get policies for user internal server error response has a 2xx status code
func (o *GetPoliciesForUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get policies for user internal server error response has a 3xx status code
func (o *GetPoliciesForUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policies for user internal server error response has a 4xx status code
func (o *GetPoliciesForUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get policies for user internal server error response has a 5xx status code
func (o *GetPoliciesForUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get policies for user internal server error response a status code equal to that given
func (o *GetPoliciesForUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetPoliciesForUserInternalServerError) Error() string {
	return fmt.Sprintf("[GET /users/{user_name}/policies][%d] getPoliciesForUserInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPoliciesForUserInternalServerError) String() string {
	return fmt.Sprintf("[GET /users/{user_name}/policies][%d] getPoliciesForUserInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPoliciesForUserInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPoliciesForUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
