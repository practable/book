// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/timdrysdale/interval/internal/client/models"
)

// AddPolicyForUserReader is a Reader for the AddPolicyForUser structure.
type AddPolicyForUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddPolicyForUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewAddPolicyForUserNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAddPolicyForUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddPolicyForUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddPolicyForUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddPolicyForUserNoContent creates a AddPolicyForUserNoContent with default headers values
func NewAddPolicyForUserNoContent() *AddPolicyForUserNoContent {
	return &AddPolicyForUserNoContent{}
}

/*
AddPolicyForUserNoContent describes a response with status code 204, with default header values.

OK - No Content
*/
type AddPolicyForUserNoContent struct {
}

// IsSuccess returns true when this add policy for user no content response has a 2xx status code
func (o *AddPolicyForUserNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add policy for user no content response has a 3xx status code
func (o *AddPolicyForUserNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add policy for user no content response has a 4xx status code
func (o *AddPolicyForUserNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this add policy for user no content response has a 5xx status code
func (o *AddPolicyForUserNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this add policy for user no content response a status code equal to that given
func (o *AddPolicyForUserNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *AddPolicyForUserNoContent) Error() string {
	return fmt.Sprintf("[POST /users/{user_name}/policies/{policy_name}][%d] addPolicyForUserNoContent ", 204)
}

func (o *AddPolicyForUserNoContent) String() string {
	return fmt.Sprintf("[POST /users/{user_name}/policies/{policy_name}][%d] addPolicyForUserNoContent ", 204)
}

func (o *AddPolicyForUserNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddPolicyForUserUnauthorized creates a AddPolicyForUserUnauthorized with default headers values
func NewAddPolicyForUserUnauthorized() *AddPolicyForUserUnauthorized {
	return &AddPolicyForUserUnauthorized{}
}

/*
AddPolicyForUserUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddPolicyForUserUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this add policy for user unauthorized response has a 2xx status code
func (o *AddPolicyForUserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add policy for user unauthorized response has a 3xx status code
func (o *AddPolicyForUserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add policy for user unauthorized response has a 4xx status code
func (o *AddPolicyForUserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add policy for user unauthorized response has a 5xx status code
func (o *AddPolicyForUserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add policy for user unauthorized response a status code equal to that given
func (o *AddPolicyForUserUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *AddPolicyForUserUnauthorized) Error() string {
	return fmt.Sprintf("[POST /users/{user_name}/policies/{policy_name}][%d] addPolicyForUserUnauthorized  %+v", 401, o.Payload)
}

func (o *AddPolicyForUserUnauthorized) String() string {
	return fmt.Sprintf("[POST /users/{user_name}/policies/{policy_name}][%d] addPolicyForUserUnauthorized  %+v", 401, o.Payload)
}

func (o *AddPolicyForUserUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddPolicyForUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddPolicyForUserNotFound creates a AddPolicyForUserNotFound with default headers values
func NewAddPolicyForUserNotFound() *AddPolicyForUserNotFound {
	return &AddPolicyForUserNotFound{}
}

/*
AddPolicyForUserNotFound describes a response with status code 404, with default header values.

The specified resource was not found
*/
type AddPolicyForUserNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this add policy for user not found response has a 2xx status code
func (o *AddPolicyForUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add policy for user not found response has a 3xx status code
func (o *AddPolicyForUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add policy for user not found response has a 4xx status code
func (o *AddPolicyForUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add policy for user not found response has a 5xx status code
func (o *AddPolicyForUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add policy for user not found response a status code equal to that given
func (o *AddPolicyForUserNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *AddPolicyForUserNotFound) Error() string {
	return fmt.Sprintf("[POST /users/{user_name}/policies/{policy_name}][%d] addPolicyForUserNotFound  %+v", 404, o.Payload)
}

func (o *AddPolicyForUserNotFound) String() string {
	return fmt.Sprintf("[POST /users/{user_name}/policies/{policy_name}][%d] addPolicyForUserNotFound  %+v", 404, o.Payload)
}

func (o *AddPolicyForUserNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddPolicyForUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddPolicyForUserInternalServerError creates a AddPolicyForUserInternalServerError with default headers values
func NewAddPolicyForUserInternalServerError() *AddPolicyForUserInternalServerError {
	return &AddPolicyForUserInternalServerError{}
}

/*
AddPolicyForUserInternalServerError describes a response with status code 500, with default header values.

Internal Error
*/
type AddPolicyForUserInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this add policy for user internal server error response has a 2xx status code
func (o *AddPolicyForUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add policy for user internal server error response has a 3xx status code
func (o *AddPolicyForUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add policy for user internal server error response has a 4xx status code
func (o *AddPolicyForUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add policy for user internal server error response has a 5xx status code
func (o *AddPolicyForUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add policy for user internal server error response a status code equal to that given
func (o *AddPolicyForUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AddPolicyForUserInternalServerError) Error() string {
	return fmt.Sprintf("[POST /users/{user_name}/policies/{policy_name}][%d] addPolicyForUserInternalServerError  %+v", 500, o.Payload)
}

func (o *AddPolicyForUserInternalServerError) String() string {
	return fmt.Sprintf("[POST /users/{user_name}/policies/{policy_name}][%d] addPolicyForUserInternalServerError  %+v", 500, o.Payload)
}

func (o *AddPolicyForUserInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddPolicyForUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
