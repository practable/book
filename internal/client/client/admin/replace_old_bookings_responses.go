// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/timdrysdale/interval/internal/client/models"
)

// ReplaceOldBookingsReader is a Reader for the ReplaceOldBookings structure.
type ReplaceOldBookingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplaceOldBookingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReplaceOldBookingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewReplaceOldBookingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReplaceOldBookingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReplaceOldBookingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewReplaceOldBookingsOK creates a ReplaceOldBookingsOK with default headers values
func NewReplaceOldBookingsOK() *ReplaceOldBookingsOK {
	return &ReplaceOldBookingsOK{}
}

/* ReplaceOldBookingsOK describes a response with status code 200, with default header values.

OK
*/
type ReplaceOldBookingsOK struct {
	Payload *models.StoreStatusAdmin
}

// IsSuccess returns true when this replace old bookings o k response has a 2xx status code
func (o *ReplaceOldBookingsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this replace old bookings o k response has a 3xx status code
func (o *ReplaceOldBookingsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replace old bookings o k response has a 4xx status code
func (o *ReplaceOldBookingsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this replace old bookings o k response has a 5xx status code
func (o *ReplaceOldBookingsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this replace old bookings o k response a status code equal to that given
func (o *ReplaceOldBookingsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ReplaceOldBookingsOK) Error() string {
	return fmt.Sprintf("[PUT /admin/oldbookings][%d] replaceOldBookingsOK  %+v", 200, o.Payload)
}

func (o *ReplaceOldBookingsOK) String() string {
	return fmt.Sprintf("[PUT /admin/oldbookings][%d] replaceOldBookingsOK  %+v", 200, o.Payload)
}

func (o *ReplaceOldBookingsOK) GetPayload() *models.StoreStatusAdmin {
	return o.Payload
}

func (o *ReplaceOldBookingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StoreStatusAdmin)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceOldBookingsUnauthorized creates a ReplaceOldBookingsUnauthorized with default headers values
func NewReplaceOldBookingsUnauthorized() *ReplaceOldBookingsUnauthorized {
	return &ReplaceOldBookingsUnauthorized{}
}

/* ReplaceOldBookingsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ReplaceOldBookingsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this replace old bookings unauthorized response has a 2xx status code
func (o *ReplaceOldBookingsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this replace old bookings unauthorized response has a 3xx status code
func (o *ReplaceOldBookingsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replace old bookings unauthorized response has a 4xx status code
func (o *ReplaceOldBookingsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this replace old bookings unauthorized response has a 5xx status code
func (o *ReplaceOldBookingsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this replace old bookings unauthorized response a status code equal to that given
func (o *ReplaceOldBookingsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ReplaceOldBookingsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /admin/oldbookings][%d] replaceOldBookingsUnauthorized  %+v", 401, o.Payload)
}

func (o *ReplaceOldBookingsUnauthorized) String() string {
	return fmt.Sprintf("[PUT /admin/oldbookings][%d] replaceOldBookingsUnauthorized  %+v", 401, o.Payload)
}

func (o *ReplaceOldBookingsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ReplaceOldBookingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceOldBookingsNotFound creates a ReplaceOldBookingsNotFound with default headers values
func NewReplaceOldBookingsNotFound() *ReplaceOldBookingsNotFound {
	return &ReplaceOldBookingsNotFound{}
}

/* ReplaceOldBookingsNotFound describes a response with status code 404, with default header values.

The specified resource was not found
*/
type ReplaceOldBookingsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this replace old bookings not found response has a 2xx status code
func (o *ReplaceOldBookingsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this replace old bookings not found response has a 3xx status code
func (o *ReplaceOldBookingsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replace old bookings not found response has a 4xx status code
func (o *ReplaceOldBookingsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this replace old bookings not found response has a 5xx status code
func (o *ReplaceOldBookingsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this replace old bookings not found response a status code equal to that given
func (o *ReplaceOldBookingsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ReplaceOldBookingsNotFound) Error() string {
	return fmt.Sprintf("[PUT /admin/oldbookings][%d] replaceOldBookingsNotFound  %+v", 404, o.Payload)
}

func (o *ReplaceOldBookingsNotFound) String() string {
	return fmt.Sprintf("[PUT /admin/oldbookings][%d] replaceOldBookingsNotFound  %+v", 404, o.Payload)
}

func (o *ReplaceOldBookingsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ReplaceOldBookingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceOldBookingsInternalServerError creates a ReplaceOldBookingsInternalServerError with default headers values
func NewReplaceOldBookingsInternalServerError() *ReplaceOldBookingsInternalServerError {
	return &ReplaceOldBookingsInternalServerError{}
}

/* ReplaceOldBookingsInternalServerError describes a response with status code 500, with default header values.

Internal Error
*/
type ReplaceOldBookingsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this replace old bookings internal server error response has a 2xx status code
func (o *ReplaceOldBookingsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this replace old bookings internal server error response has a 3xx status code
func (o *ReplaceOldBookingsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replace old bookings internal server error response has a 4xx status code
func (o *ReplaceOldBookingsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this replace old bookings internal server error response has a 5xx status code
func (o *ReplaceOldBookingsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this replace old bookings internal server error response a status code equal to that given
func (o *ReplaceOldBookingsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ReplaceOldBookingsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /admin/oldbookings][%d] replaceOldBookingsInternalServerError  %+v", 500, o.Payload)
}

func (o *ReplaceOldBookingsInternalServerError) String() string {
	return fmt.Sprintf("[PUT /admin/oldbookings][%d] replaceOldBookingsInternalServerError  %+v", 500, o.Payload)
}

func (o *ReplaceOldBookingsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ReplaceOldBookingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
