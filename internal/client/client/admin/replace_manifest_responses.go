// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/timdrysdale/interval/internal/client/models"
)

// ReplaceManifestReader is a Reader for the ReplaceManifest structure.
type ReplaceManifestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplaceManifestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReplaceManifestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewReplaceManifestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReplaceManifestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReplaceManifestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewReplaceManifestOK creates a ReplaceManifestOK with default headers values
func NewReplaceManifestOK() *ReplaceManifestOK {
	return &ReplaceManifestOK{}
}

/* ReplaceManifestOK describes a response with status code 200, with default header values.

OK
*/
type ReplaceManifestOK struct {
	Payload *models.StoreStatusAdmin
}

// IsSuccess returns true when this replace manifest o k response has a 2xx status code
func (o *ReplaceManifestOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this replace manifest o k response has a 3xx status code
func (o *ReplaceManifestOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replace manifest o k response has a 4xx status code
func (o *ReplaceManifestOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this replace manifest o k response has a 5xx status code
func (o *ReplaceManifestOK) IsServerError() bool {
	return false
}

// IsCode returns true when this replace manifest o k response a status code equal to that given
func (o *ReplaceManifestOK) IsCode(code int) bool {
	return code == 200
}

func (o *ReplaceManifestOK) Error() string {
	return fmt.Sprintf("[PUT /admin/manifest][%d] replaceManifestOK  %+v", 200, o.Payload)
}

func (o *ReplaceManifestOK) String() string {
	return fmt.Sprintf("[PUT /admin/manifest][%d] replaceManifestOK  %+v", 200, o.Payload)
}

func (o *ReplaceManifestOK) GetPayload() *models.StoreStatusAdmin {
	return o.Payload
}

func (o *ReplaceManifestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StoreStatusAdmin)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceManifestUnauthorized creates a ReplaceManifestUnauthorized with default headers values
func NewReplaceManifestUnauthorized() *ReplaceManifestUnauthorized {
	return &ReplaceManifestUnauthorized{}
}

/* ReplaceManifestUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ReplaceManifestUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this replace manifest unauthorized response has a 2xx status code
func (o *ReplaceManifestUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this replace manifest unauthorized response has a 3xx status code
func (o *ReplaceManifestUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replace manifest unauthorized response has a 4xx status code
func (o *ReplaceManifestUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this replace manifest unauthorized response has a 5xx status code
func (o *ReplaceManifestUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this replace manifest unauthorized response a status code equal to that given
func (o *ReplaceManifestUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ReplaceManifestUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /admin/manifest][%d] replaceManifestUnauthorized  %+v", 401, o.Payload)
}

func (o *ReplaceManifestUnauthorized) String() string {
	return fmt.Sprintf("[PUT /admin/manifest][%d] replaceManifestUnauthorized  %+v", 401, o.Payload)
}

func (o *ReplaceManifestUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ReplaceManifestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceManifestNotFound creates a ReplaceManifestNotFound with default headers values
func NewReplaceManifestNotFound() *ReplaceManifestNotFound {
	return &ReplaceManifestNotFound{}
}

/* ReplaceManifestNotFound describes a response with status code 404, with default header values.

The specified resource was not found
*/
type ReplaceManifestNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this replace manifest not found response has a 2xx status code
func (o *ReplaceManifestNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this replace manifest not found response has a 3xx status code
func (o *ReplaceManifestNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replace manifest not found response has a 4xx status code
func (o *ReplaceManifestNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this replace manifest not found response has a 5xx status code
func (o *ReplaceManifestNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this replace manifest not found response a status code equal to that given
func (o *ReplaceManifestNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ReplaceManifestNotFound) Error() string {
	return fmt.Sprintf("[PUT /admin/manifest][%d] replaceManifestNotFound  %+v", 404, o.Payload)
}

func (o *ReplaceManifestNotFound) String() string {
	return fmt.Sprintf("[PUT /admin/manifest][%d] replaceManifestNotFound  %+v", 404, o.Payload)
}

func (o *ReplaceManifestNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ReplaceManifestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceManifestInternalServerError creates a ReplaceManifestInternalServerError with default headers values
func NewReplaceManifestInternalServerError() *ReplaceManifestInternalServerError {
	return &ReplaceManifestInternalServerError{}
}

/* ReplaceManifestInternalServerError describes a response with status code 500, with default header values.

Internal Error
*/
type ReplaceManifestInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this replace manifest internal server error response has a 2xx status code
func (o *ReplaceManifestInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this replace manifest internal server error response has a 3xx status code
func (o *ReplaceManifestInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replace manifest internal server error response has a 4xx status code
func (o *ReplaceManifestInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this replace manifest internal server error response has a 5xx status code
func (o *ReplaceManifestInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this replace manifest internal server error response a status code equal to that given
func (o *ReplaceManifestInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ReplaceManifestInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /admin/manifest][%d] replaceManifestInternalServerError  %+v", 500, o.Payload)
}

func (o *ReplaceManifestInternalServerError) String() string {
	return fmt.Sprintf("[PUT /admin/manifest][%d] replaceManifestInternalServerError  %+v", 500, o.Payload)
}

func (o *ReplaceManifestInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ReplaceManifestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
