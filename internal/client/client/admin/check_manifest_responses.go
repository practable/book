// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/practable/book/internal/client/models"
)

// CheckManifestReader is a Reader for the CheckManifest structure.
type CheckManifestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CheckManifestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewCheckManifestNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCheckManifestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCheckManifestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCheckManifestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCheckManifestNoContent creates a CheckManifestNoContent with default headers values
func NewCheckManifestNoContent() *CheckManifestNoContent {
	return &CheckManifestNoContent{}
}

/* CheckManifestNoContent describes a response with status code 204, with default header values.

OK
*/
type CheckManifestNoContent struct {
}

// IsSuccess returns true when this check manifest no content response has a 2xx status code
func (o *CheckManifestNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this check manifest no content response has a 3xx status code
func (o *CheckManifestNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this check manifest no content response has a 4xx status code
func (o *CheckManifestNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this check manifest no content response has a 5xx status code
func (o *CheckManifestNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this check manifest no content response a status code equal to that given
func (o *CheckManifestNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *CheckManifestNoContent) Error() string {
	return fmt.Sprintf("[GET /admin/manifest/check][%d] checkManifestNoContent ", 204)
}

func (o *CheckManifestNoContent) String() string {
	return fmt.Sprintf("[GET /admin/manifest/check][%d] checkManifestNoContent ", 204)
}

func (o *CheckManifestNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCheckManifestUnauthorized creates a CheckManifestUnauthorized with default headers values
func NewCheckManifestUnauthorized() *CheckManifestUnauthorized {
	return &CheckManifestUnauthorized{}
}

/* CheckManifestUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CheckManifestUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this check manifest unauthorized response has a 2xx status code
func (o *CheckManifestUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this check manifest unauthorized response has a 3xx status code
func (o *CheckManifestUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this check manifest unauthorized response has a 4xx status code
func (o *CheckManifestUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this check manifest unauthorized response has a 5xx status code
func (o *CheckManifestUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this check manifest unauthorized response a status code equal to that given
func (o *CheckManifestUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CheckManifestUnauthorized) Error() string {
	return fmt.Sprintf("[GET /admin/manifest/check][%d] checkManifestUnauthorized  %+v", 401, o.Payload)
}

func (o *CheckManifestUnauthorized) String() string {
	return fmt.Sprintf("[GET /admin/manifest/check][%d] checkManifestUnauthorized  %+v", 401, o.Payload)
}

func (o *CheckManifestUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CheckManifestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckManifestNotFound creates a CheckManifestNotFound with default headers values
func NewCheckManifestNotFound() *CheckManifestNotFound {
	return &CheckManifestNotFound{}
}

/* CheckManifestNotFound describes a response with status code 404, with default header values.

The specified resource was not found
*/
type CheckManifestNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this check manifest not found response has a 2xx status code
func (o *CheckManifestNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this check manifest not found response has a 3xx status code
func (o *CheckManifestNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this check manifest not found response has a 4xx status code
func (o *CheckManifestNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this check manifest not found response has a 5xx status code
func (o *CheckManifestNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this check manifest not found response a status code equal to that given
func (o *CheckManifestNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CheckManifestNotFound) Error() string {
	return fmt.Sprintf("[GET /admin/manifest/check][%d] checkManifestNotFound  %+v", 404, o.Payload)
}

func (o *CheckManifestNotFound) String() string {
	return fmt.Sprintf("[GET /admin/manifest/check][%d] checkManifestNotFound  %+v", 404, o.Payload)
}

func (o *CheckManifestNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CheckManifestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckManifestInternalServerError creates a CheckManifestInternalServerError with default headers values
func NewCheckManifestInternalServerError() *CheckManifestInternalServerError {
	return &CheckManifestInternalServerError{}
}

/* CheckManifestInternalServerError describes a response with status code 500, with default header values.

InternalError
*/
type CheckManifestInternalServerError struct {
	Payload interface{}
}

// IsSuccess returns true when this check manifest internal server error response has a 2xx status code
func (o *CheckManifestInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this check manifest internal server error response has a 3xx status code
func (o *CheckManifestInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this check manifest internal server error response has a 4xx status code
func (o *CheckManifestInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this check manifest internal server error response has a 5xx status code
func (o *CheckManifestInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this check manifest internal server error response a status code equal to that given
func (o *CheckManifestInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CheckManifestInternalServerError) Error() string {
	return fmt.Sprintf("[GET /admin/manifest/check][%d] checkManifestInternalServerError  %+v", 500, o.Payload)
}

func (o *CheckManifestInternalServerError) String() string {
	return fmt.Sprintf("[GET /admin/manifest/check][%d] checkManifestInternalServerError  %+v", 500, o.Payload)
}

func (o *CheckManifestInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *CheckManifestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
