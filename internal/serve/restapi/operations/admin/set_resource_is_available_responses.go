// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/practable/book/internal/serve/models"
)

// SetResourceIsAvailableNoContentCode is the HTTP code returned for type SetResourceIsAvailableNoContent
const SetResourceIsAvailableNoContentCode int = 204

/*SetResourceIsAvailableNoContent OK

swagger:response setResourceIsAvailableNoContent
*/
type SetResourceIsAvailableNoContent struct {
}

// NewSetResourceIsAvailableNoContent creates SetResourceIsAvailableNoContent with default headers values
func NewSetResourceIsAvailableNoContent() *SetResourceIsAvailableNoContent {

	return &SetResourceIsAvailableNoContent{}
}

// WriteResponse to the client
func (o *SetResourceIsAvailableNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// SetResourceIsAvailableUnauthorizedCode is the HTTP code returned for type SetResourceIsAvailableUnauthorized
const SetResourceIsAvailableUnauthorizedCode int = 401

/*SetResourceIsAvailableUnauthorized Unauthorized

swagger:response setResourceIsAvailableUnauthorized
*/
type SetResourceIsAvailableUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSetResourceIsAvailableUnauthorized creates SetResourceIsAvailableUnauthorized with default headers values
func NewSetResourceIsAvailableUnauthorized() *SetResourceIsAvailableUnauthorized {

	return &SetResourceIsAvailableUnauthorized{}
}

// WithPayload adds the payload to the set resource is available unauthorized response
func (o *SetResourceIsAvailableUnauthorized) WithPayload(payload *models.Error) *SetResourceIsAvailableUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set resource is available unauthorized response
func (o *SetResourceIsAvailableUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetResourceIsAvailableUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SetResourceIsAvailableNotFoundCode is the HTTP code returned for type SetResourceIsAvailableNotFound
const SetResourceIsAvailableNotFoundCode int = 404

/*SetResourceIsAvailableNotFound The specified resource was not found

swagger:response setResourceIsAvailableNotFound
*/
type SetResourceIsAvailableNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSetResourceIsAvailableNotFound creates SetResourceIsAvailableNotFound with default headers values
func NewSetResourceIsAvailableNotFound() *SetResourceIsAvailableNotFound {

	return &SetResourceIsAvailableNotFound{}
}

// WithPayload adds the payload to the set resource is available not found response
func (o *SetResourceIsAvailableNotFound) WithPayload(payload *models.Error) *SetResourceIsAvailableNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set resource is available not found response
func (o *SetResourceIsAvailableNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetResourceIsAvailableNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SetResourceIsAvailableInternalServerErrorCode is the HTTP code returned for type SetResourceIsAvailableInternalServerError
const SetResourceIsAvailableInternalServerErrorCode int = 500

/*SetResourceIsAvailableInternalServerError Internal Error

swagger:response setResourceIsAvailableInternalServerError
*/
type SetResourceIsAvailableInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSetResourceIsAvailableInternalServerError creates SetResourceIsAvailableInternalServerError with default headers values
func NewSetResourceIsAvailableInternalServerError() *SetResourceIsAvailableInternalServerError {

	return &SetResourceIsAvailableInternalServerError{}
}

// WithPayload adds the payload to the set resource is available internal server error response
func (o *SetResourceIsAvailableInternalServerError) WithPayload(payload *models.Error) *SetResourceIsAvailableInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set resource is available internal server error response
func (o *SetResourceIsAvailableInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetResourceIsAvailableInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
