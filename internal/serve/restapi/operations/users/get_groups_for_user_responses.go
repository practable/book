// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/practable/book/internal/serve/models"
)

// GetGroupsForUserOKCode is the HTTP code returned for type GetGroupsForUserOK
const GetGroupsForUserOKCode int = 200

/*GetGroupsForUserOK OK

swagger:response getGroupsForUserOK
*/
type GetGroupsForUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.GroupsDescribed `json:"body,omitempty"`
}

// NewGetGroupsForUserOK creates GetGroupsForUserOK with default headers values
func NewGetGroupsForUserOK() *GetGroupsForUserOK {

	return &GetGroupsForUserOK{}
}

// WithPayload adds the payload to the get groups for user o k response
func (o *GetGroupsForUserOK) WithPayload(payload *models.GroupsDescribed) *GetGroupsForUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get groups for user o k response
func (o *GetGroupsForUserOK) SetPayload(payload *models.GroupsDescribed) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupsForUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetGroupsForUserUnauthorizedCode is the HTTP code returned for type GetGroupsForUserUnauthorized
const GetGroupsForUserUnauthorizedCode int = 401

/*GetGroupsForUserUnauthorized Unauthorized

swagger:response getGroupsForUserUnauthorized
*/
type GetGroupsForUserUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetGroupsForUserUnauthorized creates GetGroupsForUserUnauthorized with default headers values
func NewGetGroupsForUserUnauthorized() *GetGroupsForUserUnauthorized {

	return &GetGroupsForUserUnauthorized{}
}

// WithPayload adds the payload to the get groups for user unauthorized response
func (o *GetGroupsForUserUnauthorized) WithPayload(payload *models.Error) *GetGroupsForUserUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get groups for user unauthorized response
func (o *GetGroupsForUserUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupsForUserUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetGroupsForUserNotFoundCode is the HTTP code returned for type GetGroupsForUserNotFound
const GetGroupsForUserNotFoundCode int = 404

/*GetGroupsForUserNotFound The specified resource was not found

swagger:response getGroupsForUserNotFound
*/
type GetGroupsForUserNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetGroupsForUserNotFound creates GetGroupsForUserNotFound with default headers values
func NewGetGroupsForUserNotFound() *GetGroupsForUserNotFound {

	return &GetGroupsForUserNotFound{}
}

// WithPayload adds the payload to the get groups for user not found response
func (o *GetGroupsForUserNotFound) WithPayload(payload *models.Error) *GetGroupsForUserNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get groups for user not found response
func (o *GetGroupsForUserNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupsForUserNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetGroupsForUserInternalServerErrorCode is the HTTP code returned for type GetGroupsForUserInternalServerError
const GetGroupsForUserInternalServerErrorCode int = 500

/*GetGroupsForUserInternalServerError Internal Error

swagger:response getGroupsForUserInternalServerError
*/
type GetGroupsForUserInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetGroupsForUserInternalServerError creates GetGroupsForUserInternalServerError with default headers values
func NewGetGroupsForUserInternalServerError() *GetGroupsForUserInternalServerError {

	return &GetGroupsForUserInternalServerError{}
}

// WithPayload adds the payload to the get groups for user internal server error response
func (o *GetGroupsForUserInternalServerError) WithPayload(payload *models.Error) *GetGroupsForUserInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get groups for user internal server error response
func (o *GetGroupsForUserInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupsForUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
