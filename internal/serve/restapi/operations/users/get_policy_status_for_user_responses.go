// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/practable/book/internal/serve/models"
)

// GetPolicyStatusForUserOKCode is the HTTP code returned for type GetPolicyStatusForUserOK
const GetPolicyStatusForUserOKCode int = 200

/*GetPolicyStatusForUserOK OK

swagger:response getPolicyStatusForUserOK
*/
type GetPolicyStatusForUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.PolicyStatus `json:"body,omitempty"`
}

// NewGetPolicyStatusForUserOK creates GetPolicyStatusForUserOK with default headers values
func NewGetPolicyStatusForUserOK() *GetPolicyStatusForUserOK {

	return &GetPolicyStatusForUserOK{}
}

// WithPayload adds the payload to the get policy status for user o k response
func (o *GetPolicyStatusForUserOK) WithPayload(payload *models.PolicyStatus) *GetPolicyStatusForUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get policy status for user o k response
func (o *GetPolicyStatusForUserOK) SetPayload(payload *models.PolicyStatus) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPolicyStatusForUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPolicyStatusForUserUnauthorizedCode is the HTTP code returned for type GetPolicyStatusForUserUnauthorized
const GetPolicyStatusForUserUnauthorizedCode int = 401

/*GetPolicyStatusForUserUnauthorized Unauthorized

swagger:response getPolicyStatusForUserUnauthorized
*/
type GetPolicyStatusForUserUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPolicyStatusForUserUnauthorized creates GetPolicyStatusForUserUnauthorized with default headers values
func NewGetPolicyStatusForUserUnauthorized() *GetPolicyStatusForUserUnauthorized {

	return &GetPolicyStatusForUserUnauthorized{}
}

// WithPayload adds the payload to the get policy status for user unauthorized response
func (o *GetPolicyStatusForUserUnauthorized) WithPayload(payload *models.Error) *GetPolicyStatusForUserUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get policy status for user unauthorized response
func (o *GetPolicyStatusForUserUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPolicyStatusForUserUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPolicyStatusForUserNotFoundCode is the HTTP code returned for type GetPolicyStatusForUserNotFound
const GetPolicyStatusForUserNotFoundCode int = 404

/*GetPolicyStatusForUserNotFound The specified resource was not found

swagger:response getPolicyStatusForUserNotFound
*/
type GetPolicyStatusForUserNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPolicyStatusForUserNotFound creates GetPolicyStatusForUserNotFound with default headers values
func NewGetPolicyStatusForUserNotFound() *GetPolicyStatusForUserNotFound {

	return &GetPolicyStatusForUserNotFound{}
}

// WithPayload adds the payload to the get policy status for user not found response
func (o *GetPolicyStatusForUserNotFound) WithPayload(payload *models.Error) *GetPolicyStatusForUserNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get policy status for user not found response
func (o *GetPolicyStatusForUserNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPolicyStatusForUserNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPolicyStatusForUserInternalServerErrorCode is the HTTP code returned for type GetPolicyStatusForUserInternalServerError
const GetPolicyStatusForUserInternalServerErrorCode int = 500

/*GetPolicyStatusForUserInternalServerError Internal Error

swagger:response getPolicyStatusForUserInternalServerError
*/
type GetPolicyStatusForUserInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPolicyStatusForUserInternalServerError creates GetPolicyStatusForUserInternalServerError with default headers values
func NewGetPolicyStatusForUserInternalServerError() *GetPolicyStatusForUserInternalServerError {

	return &GetPolicyStatusForUserInternalServerError{}
}

// WithPayload adds the payload to the get policy status for user internal server error response
func (o *GetPolicyStatusForUserInternalServerError) WithPayload(payload *models.Error) *GetPolicyStatusForUserInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get policy status for user internal server error response
func (o *GetPolicyStatusForUserInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPolicyStatusForUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
