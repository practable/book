// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/practable/book/internal/serve/models"
)

// GetAvailabilityOKCode is the HTTP code returned for type GetAvailabilityOK
const GetAvailabilityOKCode int = 200

/*GetAvailabilityOK OK

swagger:response getAvailabilityOK
*/
type GetAvailabilityOK struct {

	/*
	  In: Body
	*/
	Payload models.Intervals `json:"body,omitempty"`
}

// NewGetAvailabilityOK creates GetAvailabilityOK with default headers values
func NewGetAvailabilityOK() *GetAvailabilityOK {

	return &GetAvailabilityOK{}
}

// WithPayload adds the payload to the get availability o k response
func (o *GetAvailabilityOK) WithPayload(payload models.Intervals) *GetAvailabilityOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get availability o k response
func (o *GetAvailabilityOK) SetPayload(payload models.Intervals) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAvailabilityOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.Intervals{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAvailabilityUnauthorizedCode is the HTTP code returned for type GetAvailabilityUnauthorized
const GetAvailabilityUnauthorizedCode int = 401

/*GetAvailabilityUnauthorized Unauthorized

swagger:response getAvailabilityUnauthorized
*/
type GetAvailabilityUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAvailabilityUnauthorized creates GetAvailabilityUnauthorized with default headers values
func NewGetAvailabilityUnauthorized() *GetAvailabilityUnauthorized {

	return &GetAvailabilityUnauthorized{}
}

// WithPayload adds the payload to the get availability unauthorized response
func (o *GetAvailabilityUnauthorized) WithPayload(payload *models.Error) *GetAvailabilityUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get availability unauthorized response
func (o *GetAvailabilityUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAvailabilityUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAvailabilityNotFoundCode is the HTTP code returned for type GetAvailabilityNotFound
const GetAvailabilityNotFoundCode int = 404

/*GetAvailabilityNotFound The specified resource was not found

swagger:response getAvailabilityNotFound
*/
type GetAvailabilityNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAvailabilityNotFound creates GetAvailabilityNotFound with default headers values
func NewGetAvailabilityNotFound() *GetAvailabilityNotFound {

	return &GetAvailabilityNotFound{}
}

// WithPayload adds the payload to the get availability not found response
func (o *GetAvailabilityNotFound) WithPayload(payload *models.Error) *GetAvailabilityNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get availability not found response
func (o *GetAvailabilityNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAvailabilityNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAvailabilityInternalServerErrorCode is the HTTP code returned for type GetAvailabilityInternalServerError
const GetAvailabilityInternalServerErrorCode int = 500

/*GetAvailabilityInternalServerError Internal Error

swagger:response getAvailabilityInternalServerError
*/
type GetAvailabilityInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAvailabilityInternalServerError creates GetAvailabilityInternalServerError with default headers values
func NewGetAvailabilityInternalServerError() *GetAvailabilityInternalServerError {

	return &GetAvailabilityInternalServerError{}
}

// WithPayload adds the payload to the get availability internal server error response
func (o *GetAvailabilityInternalServerError) WithPayload(payload *models.Error) *GetAvailabilityInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get availability internal server error response
func (o *GetAvailabilityInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAvailabilityInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
