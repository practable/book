// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Policy policy
//
// swagger:model Policy
type Policy struct {

	// allow start in past within
	AllowStartInPastWithin string `json:"allow_start_in_past_within,omitempty"`

	// book ahead
	BookAhead string `json:"book_ahead,omitempty"`

	// description
	// Required: true
	Description *string `json:"description"`

	// display guides
	DisplayGuides []string `json:"display_guides"`

	// enforce allow start in past
	EnforceAllowStartInPast bool `json:"enforce_allow_start_in_past,omitempty"`

	// enforce book ahead
	EnforceBookAhead bool `json:"enforce_book_ahead,omitempty"`

	// enforce grace period
	EnforceGracePeriod bool `json:"enforce_grace_period,omitempty"`

	// enforce max bookings
	EnforceMaxBookings bool `json:"enforce_max_bookings,omitempty"`

	// enforce max duration
	EnforceMaxDuration bool `json:"enforce_max_duration,omitempty"`

	// enforce max usage
	EnforceMaxUsage bool `json:"enforce_max_usage,omitempty"`

	// enforce min duration
	EnforceMinDuration bool `json:"enforce_min_duration,omitempty"`

	// enforce next available
	EnforceNextAvailable bool `json:"enforce_next_available,omitempty"`

	// enforce starts within
	EnforceStartsWithin bool `json:"enforce_starts_within,omitempty"`

	// enforce unlimited users
	EnforceUnlimitedUsers bool `json:"enforce_unlimited_users,omitempty"`

	// grace penalty
	GracePenalty string `json:"grace_penalty,omitempty"`

	// grace period
	GracePeriod string `json:"grace_period,omitempty"`

	// max bookings
	MaxBookings int64 `json:"max_bookings,omitempty"`

	// max duration
	MaxDuration string `json:"max_duration,omitempty"`

	// max usage
	MaxUsage string `json:"max_usage,omitempty"`

	// min duration
	MinDuration string `json:"min_duration,omitempty"`

	// next available
	NextAvailable string `json:"next_available,omitempty"`

	// slots
	// Required: true
	Slots []string `json:"slots"`

	// starts within
	StartsWithin string `json:"starts_within,omitempty"`
}

// Validate validates this policy
func (m *Policy) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDescription(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSlots(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Policy) validateDescription(formats strfmt.Registry) error {

	if err := validate.Required("description", "body", m.Description); err != nil {
		return err
	}

	return nil
}

func (m *Policy) validateSlots(formats strfmt.Registry) error {

	if err := validate.Required("slots", "body", m.Slots); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this policy based on context it is used
func (m *Policy) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Policy) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Policy) UnmarshalBinary(b []byte) error {
	var res Policy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
