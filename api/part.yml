swagger: '2.0'
info:
  version: '0.2'
  title: AdvanceBooking
  description: User API for booking slots in advance
  contact:
    email: timothy.d.drysdale@gmail.com
    name: Tim Drysdale
    url: https://practable.io
host: book.practable.io
basePath: /api/v1
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header 
schemes:
  - http
consumes:
- application/json
- application/yaml
produces:
- application/json
- application/yaml

paths:

  /admin/bookings:
    get:
      description: Exports a copy of the current bookings, with sufficient information to allow editing and replacement. If successful produces YAML-formatted bookings list.
      summary: Export a copy of all current bookings
      tags:
      - admin
      - bookings
      operationId: ExportBookings
      deprecated: false
      produces:
      - application/yaml
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Bookings'
          headers: {}
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalError'

    put:
      summary: Replace current bookings 
      description: Deletes all current bookings, refunds usage to users, and then replaces with current bookings. Existing users are retained, new users are created as required to match bookings.
      tags:
      - admin
      - bookings
      operationId: ReplaceBookings
      deprecated: false
      consumes:
      - application/yaml
      produces:
      - application/json
      parameters:
      - name: bookings
        in: body
        schema:
          $ref: '#/definitions/Bookings'
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StoreStatusAdmin'
          headers: {}
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalError'

  /admin/manifest:
    get:
      summary: Export the manifest
      description: Export the manifest (resources, slots, policies, descriptions etc). Does not include bookings or users
      tags:
      - admin
      - manifest
      operationId: ExportManifest
      deprecated: false
      produces:
      - application/yaml
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Manifest'
          headers: {}
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalError'
    put:
      summary: Replace the manifest
      description: Delete the existing manifest and replace it with a new one. All items have specified names so bookings do not need updating (except perhaps you should if booked resources have been removed) 
      tags:
      - admin
      - manifest
      operationId: ReplaceManifest
      deprecated: false
      consumes:
      - application/yaml
      produces:
      - application/json
      parameters:
      - name: manifest
        in: body
        schema:
          $ref: '#/definitions/Manifest'
      security:
        - Bearer: []  
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StoreStatusAdmin'
          headers: {}
        401:
          $ref: '#/responses/Unauthorized'  
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalError'

definitions:
  Booking:
    title: booking
    description: A booking represents a promise to supply an activity. The booleans are not required because we don't process the booking status when loading old bookings (all old bookings are assumed to have been good bookings)
    type: object
    properties:
      cancelled:
        description: Has the booking been cancelled?
        type: boolean
      name:
        description: unique name of the booking
        type: string
      policy:
        description: policy under which the booking was made
        type: string
      slot:
        description: name of the slot that has been booked
        type: string
      started:
        description: has the booking been started by the user?
        type: boolean
      unfulfilled:
        description: was the resource unavailable
        type: boolean
      user:
        description: name of the user who made the booking
        type: string
      when:
        $ref: '#/definitions/Interval'
    required:
    - name
    - policy
    - slot
    - user
    - when

  Bookings:
    description: list of bookings
    type: array
    items:
      $ref: '#/definitions/Booking'

  Description:
    title: description
    description: Description of a resource e.g. policy, slot, user interface
    example:
      name: Penduino (basic)
      type: pool
      short: Penduino electromagnetic pendulums with pulsed drive and braking
      long: Some longer description
      further: https://static.practable.io/descriptions/pools/penduino/index.html
      thumb: https://assets.practable.io/images/pools/penduino/thumb.png
      image: https://assets.practable.io/images/pools/penduino/image.png
    type: object
    properties:
      name:
        description: Display name
        example: Penduino (basic)
        type: string
      short:
        description: 140 char max description of the interface in plain text
        example: Interface to the penduino electromagnetic pendulum with variable drive, active braking, short and open circuit loading.
        type: string
      type:
        description: Type of resource being described, e.g. pool, activity, userinterface
        example: userinterface
        type: string
      long:
        description: 280 char additional description of the interface in plain text
        type: string
      further:
        description: URL for further information
        example: https://static.practable.io/info/penduino/ui.html
        type: string
      thumb:
        description: URL of thumbnail image (150x150)
        example: https://assets.practable.io/images/penduino-150x150.png
        type: string
      image:
        description: URL of main image (500x500)
        example: https://assets.practable.io/images/penduino-500x500.png
        type: string
    required:
    - name
    - type


  Error:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
    required:
      - code
      - message

  Interval:
    type: object
    properties:
      start:
        type: string
        format: date-time
      end:
        type: string
        format: date-time

  Manifest:
    title: manifest
    description: Represents resources that can be booked
    type: object
    properties:
      descriptions:
        type: object
        additionalProperties:
          $ref: '#/definitions/Description'
      policies:
        type: object
        additionalProperties:
          $ref: '#/definitions/Policy'
      resources:
        type: object
        additionalProperties:
          $ref: '#/definitions/Resource'
      slots:
        type: object
        additionalProperties:
          $ref: '#/definitions/Slot'
      streams:
        type: object
        additionalProperties:
          $ref: '#/definitions/Stream'
      uis:
        type: object
        additionalProperties:
          $ref: '#/definitions/UI'
      ui_sets:
        type: object
        additionalProperties:
          $ref: '#/definitions/UISet'
      windows:
        type: object
        additionalProperties:
          $ref: '#/definitions/Window'
    required:
    - descriptions
    - policies
    - resources
    - slots
    - streams
    - uis
    - ui_sets
    - windows

  Policy:
    type: object
    properties:
      book_ahead:
        type: string
        format: duration
      description:
        type: string
      enforce_book_ahead:
        type: boolean
      enforce_max_bookings:
        type: boolean
      enforce_max_duration:
        type: boolean
      enforce_min_duration:
        type: boolean
      enforce_max_usage:
        type: boolean
      max_bookings:
        type: integer
      max_duration:
        type: string
        format: duration
      min_duration:
        type: string
        format: duration
      max_usage:
        type: string
        format: duration
      slots:
        type: array
        items:
          type: string
    required:
      - description
      - slots

  Resource:
    type: object
    properties:
      config_url: 
        type: string
        format: url
      description:
        type: string
      streams:
        type: array
        items:
          type: string
      topic_stub:
        type: string
    required:
      - description
      - streams
      - topic_stub

  Slot:
    type: object
    properties:
      description:
        type: string
      policy:
        type: string
      resource:
        type: string
      ui_set:
        type: string
      window:
        type: string
    required:
      - description
      - policy
      - resource
      - ui_set
      - window

  StoreStatusAdmin:
    type: object
    properties:
      locked:
        type: boolean
      message:
        type: string
      now:
        type: string
        format: date-time
      bookings:
        type: integer
      descriptions:
        type: integer
      filters:
        type: integer
      old_ookings:
         type: integer
      policies:
        type: integer
      resources:
        type: integer
      slots:
        type: integer
      streams:
        type: integer
      uis:
        type: integer
      ui_ets:
        type: integer
      users:
        type: integer
      windows:
        type: integer
    required:
      - locked
      - message
      - now
      - bookings
      - descriptions
      - filters
      - old_ookings
      - policies
      - resources
      - slots
      - streams
      - uis
      - ui_ets
      - users
      - windows

  Stream:
    title: stream
    description: Represents an assigned, valid booking slot for an individual piece of equipment
    example:
      for: video
      url: https://relay-access.practable.io/session/abc123
      token: ey....
    type: object
    properties:
      audience:
        type: string
      connection_type:
        type: string
      for:
        description: Describes the stream, and doubles as template key in the URL
        example: video
        type: string
      scopes:
        type: array
        items:
          type: string
      topic:
        type: string
      url:
        description: URL at which to obtain access to the stream (getting a redirect URL containing a one time code)
        example: https://relay-access.practable.io/session/abc123
        type: string
    required:
    - audience
    - connection_type
    - for
    - scopes
    - topic
    - url

  UI:
    title: User Interface
    type: object
    properties:
      url:
        description: template for the URL for the user interface
        example: https://static.practable.io/ui/penduino-basic.html?video={{video}}&data={{data}}
        type: string
      streams_required:
        description: list of names of required streams
        example: ["data","video"]
        type: array
        items:
          type: string
          example: video
          description: stream name
      description:
        type: string
    required:
    - url
    - description

  UISet:
    title: set of User Interfaces
    type: array
    items:
      $ref: '#/definitions/UI'

  Window:
    type: object
    properties:
      allowed:
        type: array
        items:
          $ref: '#/definitions/Interval'
      denied:
        type: array
        items:
          $ref: '#/definitions/Interval'
    required:
      - allowed

# Descriptions of common responses
responses:
  NotFound:
    description: The specified resource was not found
    schema:
      $ref: '#/definitions/Error'
  Unauthorized:
    description: Unauthorized
    schema:
      $ref: '#/definitions/Error'
  InternalError:
    description: Internal Error
    schema:
      $ref: '#/definitions/Error'

tags:
- name: admin
  description: 'for admins only'
- name: bookings
  description: 'for bookings'
- name: descriptions
  description: 'for descriptions'
- name: policies
  description: 'for policies'
- name: users
  description: 'for users'
